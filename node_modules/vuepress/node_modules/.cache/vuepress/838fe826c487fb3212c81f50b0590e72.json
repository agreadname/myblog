{"remainingRequest":"H:\\full\\myBolg\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\full\\myBolg\\docs\\.vuepress\\components\\verifychip\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\full\\myBolg\\docs\\.vuepress\\components\\verifychip\\index.vue","mtime":1551345350820},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\babel-loader\\lib\\index.js","mtime":1551338590818},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js","mtime":1545827200284}],"contextDependencies":[],"result":["//\n//\n//\n//\n\n/**\r\n * url为图片路径，imgName为图片名称，类型为数组，\r\n * onsuccess为成功回调事件\r\n * onrefresh为刷新回调事件\r\n * onfail为失败回调事件\r\n */\nimport { _canvas } from \"./constructor.js\";\nexport default {\n  data: function data() {\n    return {\n      canvasKey: \"CANVAS\" + parseInt(Math.random() * 100000)\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.initCanvas();\n  },\n  props: {\n    url: {\n      type: String,\n      default: \"//picsum.photos/300/150/?image=\"\n    },\n    imgName: {\n      type: Array\n    }\n  },\n  methods: {\n    //初始化\n    initCanvas: function initCanvas() {\n      var _this = this;\n\n      var _url = this.url == \"//picsum.photos/300/150/?image=\" ? this.url + this.getRandomNumberByRange(0, 300) : this.url + this.imgName[this.getRandomNumberByRange(0, this.imgName.length - 1)];\n\n      _canvas.init({\n        el: this.$refs[this.canvasKey],\n        onSuccess: _this.result(0),\n        onFail: _this.result(1),\n        onRefresh: _this.result(2),\n        url: _url\n      });\n    },\n    //触发回调\n    result: function result(_a) {\n      var _this = this;\n\n      return function () {\n        var text = !_a ? \"成功\" : _a == 2 ? \"刷新\" : \"失败\";\n\n        _this.$message(\"这是\" + text + \"回调事件\");\n\n        !_a ? _this.$emit(\"onsuccess\", \"成功回调事件\") : _a == 2 ? _this.$emit(\"onrefresh\", \"刷新回调事件\") : _this.$emit(\"onfail\", \"失败回调事件\");\n      };\n    },\n    getRandomNumberByRange: function getRandomNumberByRange(start, end) {\n      return Math.round(Math.random() * (end - start) + start);\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,SAAA,OAAA,QAAA,kBAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,iBAAA,WAAA,SAAA,KAAA,MAAA,KAAA,MAAA;AADA,KAAA;AAGA,GALA;AAMA,SANA,qBAMA,CAAA,CANA;AAOA,SAPA,qBAOA;AACA,SAAA,UAAA;AACA,GATA;AAUA,SAAA;AACA,SAAA;AAAA,YAAA,MAAA;AAAA,eAAA;AAAA,KADA;AAEA,aAAA;AACA,YAAA;AADA;AAFA,GAVA;AAgBA,WAAA;AACA;AACA,cAFA,wBAEA;AACA,UAAA,QAAA,IAAA;;AACA,UAAA,OACA,KAAA,GAAA,IAAA,iCAAA,GACA,KAAA,GAAA,GAAA,KAAA,sBAAA,CAAA,CAAA,EAAA,GAAA,CADA,GAEA,KAAA,GAAA,GACA,KAAA,OAAA,CACA,KAAA,sBAAA,CAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CADA,CAJA;;AAOA,cAAA,IAAA,CAAA;AACA,YAAA,KAAA,KAAA,CAAA,KAAA,SAAA,CADA;AAEA,mBAAA,MAAA,MAAA,CAAA,CAAA,CAFA;AAGA,gBAAA,MAAA,MAAA,CAAA,CAAA,CAHA;AAIA,mBAAA,MAAA,MAAA,CAAA,CAAA,CAJA;AAKA,aAAA;AALA,OAAA;AAOA,KAlBA;AAmBA;AACA,UApBA,kBAoBA,EApBA,EAoBA;AACA,UAAA,QAAA,IAAA;;AACA,aAAA,YAAA;AACA,YAAA,OAAA,CAAA,EAAA,GAAA,IAAA,GAAA,MAAA,CAAA,GAAA,IAAA,GAAA,IAAA;;AACA,cAAA,QAAA,CAAA,OAAA,IAAA,GAAA,MAAA;;AACA,SAAA,EAAA,GACA,MAAA,KAAA,CAAA,WAAA,EAAA,QAAA,CADA,GAEA,MAAA,CAAA,GACA,MAAA,KAAA,CAAA,WAAA,EAAA,QAAA,CADA,GAEA,MAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAJA;AAKA,OARA;AASA,KA/BA;AAgCA,0BAhCA,kCAgCA,KAhCA,EAgCA,GAhCA,EAgCA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,MAAA,MAAA,MAAA,KAAA,IAAA,KAAA,CAAA;AACA;AAlCA;AAhBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"wrapper\" :ref=\"canvasKey\" width=\"300px\" height=\"200px\"></div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * url为图片路径，imgName为图片名称，类型为数组，\r\n * onsuccess为成功回调事件\r\n * onrefresh为刷新回调事件\r\n * onfail为失败回调事件\r\n */\r\nimport { _canvas } from \"./constructor.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      canvasKey: \"CANVAS\" + parseInt(Math.random() * 100000)\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    this.initCanvas();\r\n  },\r\n  props: {\r\n    url: { type: String, default: \"//picsum.photos/300/150/?image=\" },\r\n    imgName: {\r\n      type: Array\r\n    }\r\n  },\r\n  methods: {\r\n    //初始化\r\n    initCanvas() {\r\n      let _this = this;\r\n      let _url =\r\n        this.url == \"//picsum.photos/300/150/?image=\"\r\n          ? this.url + this.getRandomNumberByRange(0, 300)\r\n          : this.url +\r\n            this.imgName[\r\n              this.getRandomNumberByRange(0, this.imgName.length - 1)\r\n            ];\r\n      _canvas.init({\r\n        el: this.$refs[this.canvasKey],\r\n        onSuccess: _this.result(0),\r\n        onFail: _this.result(1),\r\n        onRefresh: _this.result(2),\r\n        url: _url\r\n      });\r\n    },\r\n    //触发回调\r\n    result(_a) {\r\n      let _this = this;\r\n      return function() {\r\n        let text = !_a ? \"成功\" : _a == 2 ? \"刷新\" : \"失败\";\r\n        _this.$message(\"这是\" + text + \"回调事件\");\r\n        !_a\r\n          ? _this.$emit(\"onsuccess\", \"成功回调事件\")\r\n          : _a == 2\r\n          ? _this.$emit(\"onrefresh\", \"刷新回调事件\")\r\n          : _this.$emit(\"onfail\", \"失败回调事件\");\r\n      };\r\n    },\r\n    getRandomNumberByRange(start, end) {\r\n      return Math.round(Math.random() * (end - start) + start);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n@import \"./verify.css\";\r\n</style>\r\n\r\n"],"sourceRoot":"docs\\.vuepress\\components\\verifychip"}]}