{"remainingRequest":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!H:\\full\\myBolg\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!H:\\full\\myBolg\\docs\\router\\README.md?vue&type=template&id=f28360e2&","dependencies":[{"path":"H:\\full\\myBolg\\docs\\router\\README.md","mtime":1551323536883},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1545827200284},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js","mtime":1545827200284},{"path":"H:\\full\\myBolg\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1551338590531}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"快速配置\\\"><a href=\\\"#快速配置\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 快速配置</h2> <ul><li>这个路由的注册方式基本没有改变过，就增加了一个非菜单路由的注册</li></ul> <h4 id=\\\"_1-src-文件夹的-router-basic-js\\\"><a href=\\\"#_1-src-文件夹的-router-basic-js\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 1. src 文件夹的 router/basic.js</h4> <ul><li>注册基础路由,不用控制权限的路由都在这里注册，如登陆,注册，公共页面等等界面，这个是正常的路由注册文件</li></ul> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/login'</span><span class=\\\"token punctuation\\\">,</span>\\n    name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'login'</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@layout/login'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><ul><li>这里是控制权限的路由配置，颗粒度到某个按钮</li></ul> <h4 id=\\\"_2-src-文件夹的-router-dynamic-js\\\"><a href=\\\"#_2-src-文件夹的-router-dynamic-js\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 2.src 文件夹的 router/dynamic.js</h4> <p><strong>权限路由是动态加载的</strong></p> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">只有一级菜单的路由注册</p> <ol><li>id 为后端发送的菜单字符串进行匹配的关键词</li> <li>data 是正常的路由注册内容</li> <li>redirect 必须写上，统一重定向到完整路径 <code>/home/index</code></li> <li>children 路径统一为 index</li></ol></div> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code>\\n   <span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/town'</span><span class=\\\"token punctuation\\\">,</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'town'</span><span class=\\\"token punctuation\\\">,</span>\\n      component<span class=\\\"token punctuation\\\">:</span> Layout<span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//这个默认不变的主界面组件（头部，侧边栏等）</span>\\n      redirect<span class=\\\"token punctuation\\\">:</span> to <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">&quot;/town/index&quot;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'index'</span><span class=\\\"token punctuation\\\">,</span>\\n        name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'town_index'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//</span>\\n        component<span class=\\\"token punctuation\\\">:</span> Town<span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//对应中间区域的组件</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre></div><div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">有二级菜单的路由注册</p> <ol><li>id 为后端发送的菜单字符串进行匹配的关键词</li> <li>data 是正常的路由注册内容</li> <li>redirect 必须写上，统一重定向到完整路径 <code>/form/form1</code></li> <li>父子路由分开写，不要嵌套到<code>children</code>里面，这个很重要，这个文件是要和后端给的菜单字符串进行对比合并成真正的路由，不要写成<strong>树形结构</strong>，要写成<strong>链式结构</strong></li></ol></div> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">//父组件注册</span>\\n<span class=\\\"token punctuation\\\">{</span>id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/form'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'form'</span><span class=\\\"token punctuation\\\">,</span>component<span class=\\\"token punctuation\\\">:</span> Layout<span class=\\\"token punctuation\\\">,</span>\\n  redirect<span class=\\\"token punctuation\\\">:</span> to <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">&quot;/form/form1&quot;</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//重定位要写上，可以重定位到第一个也可以第二个</span>\\n  children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\">//这里的不写</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">//form的两个子路由</span>\\n<span class=\\\"token punctuation\\\">{</span>id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'form1'</span><span class=\\\"token punctuation\\\">,</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'form1'</span><span class=\\\"token punctuation\\\">,</span>component<span class=\\\"token punctuation\\\">:</span> Form1<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">{</span>id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span>data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'form2'</span><span class=\\\"token punctuation\\\">,</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'form2'</span><span class=\\\"token punctuation\\\">,</span>component<span class=\\\"token punctuation\\\">:</span> Form2<span class=\\\"token punctuation\\\">,</span>children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre></div><h4 id=\\\"_3-src-文件夹的-router-nomenu-js\\\"><a href=\\\"#_3-src-文件夹的-router-nomenu-js\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 3.src 文件夹的 router/nomenu.js</h4> <p><em>（例子可以看底包侧边栏的表格=》【to other URL】 ）</em></p> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">受到权限限制的非菜单栏路由</p> <ol><li><code>fid</code>为相应的菜单栏的 id 比如菜单栏的表格 id 为 9，对应的 fid 为 9</li> <li><code>meta</code> 元信息写上<code>title</code>，即 tag 标签要显示的文字</li> <li>注意路径不用<code>\\\\</code></li></ol></div> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code>  <span class=\\\"token punctuation\\\">{</span>\\n    fid<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">,</span>\\n    data<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;other&quot;</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//要注意不用/</span>\\n        name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;other&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n        component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@/views/other'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        meta<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'title'</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'其他'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//很重要</span>\\n        children<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre></div><h2 id=\\\"mock-菜单权限字符串\\\"><a href=\\\"#mock-菜单权限字符串\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Mock-菜单权限字符串</h2> <h4 id=\\\"导航权限路由-src-文件夹的-mock-login-js-文件\\\"><a href=\\\"#导航权限路由-src-文件夹的-mock-login-js-文件\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 导航权限路由 src 文件夹的 mock/login.js 文件</h4> <div class=\\\"warning custom-block\\\"><p class=\\\"custom-block-title\\\">需配置</p> <p>用 mock 直接模拟获取权限菜单，有后端数据时直接修改请求地址即可，导航权限数据格式如下:\\n记得是个 json 字符串</p></div> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/*json模拟后端传递数据,后端传json标题来控制权限,决定菜单栏显示内容的地方*/</span>\\n<span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`[\\n    {//一级\\n        &quot;id&quot;: 1,\\n        &quot;title&quot;: &quot;首页&quot;,\\n        &quot;child&quot;: [],\\n        &quot;icon&quot;: &quot;dc-icon-iospaperoutline&quot;\\n    },\\n    {//有二级的\\n        &quot;id&quot;: 2,\\n        &quot;title&quot;: &quot;表单&quot;,\\n        &quot;icon&quot;: &quot;dc-icon-iosbolt&quot;,\\n        &quot;child&quot;: [\\n            {\\n                &quot;id&quot;: 3,\\n                &quot;title&quot;: &quot;表单组件一&quot;,\\n                &quot;icon&quot;: &quot;dc-icon-androidexi&quot;,\\n                &quot;child&quot;: []\\n            },\\n            {\\n                &quot;id&quot;: 4,\\n                &quot;title&quot;: &quot;表单组件二&quot;,\\n                &quot;icon&quot;: &quot;dc-icon-database&quot;,\\n                &quot;child&quot;: []\\n            }\\n        ]\\n    }\\n]`</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><blockquote><p>到了这里，基本就可以正常使用了，下面是路由相关底层文件的说明，不看不影响使用</p></blockquote> <h2 id=\\\"补充说明\\\"><a href=\\\"#补充说明\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 补充说明</h2> <h4 id=\\\"_1-src-文件夹的-library-router-dyroute-js\\\"><a href=\\\"#_1-src-文件夹的-library-router-dyroute-js\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 1.src 文件夹的 library/router/dyroute.js</h4> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">基本不用改变</p> <p>动态添加路由封装函数在这个文件，基本不用改变，可不看，需要动态添加路由的地方，引起这个文件，导出 addDynamic 函数</p></div> <ol><li>作用</li></ol> <ul><li>将后端给的菜单字符串和本地注册的路由表进行合并形成真正的路由表</li></ul> <ol start=\\\"2\\\"><li>思路</li></ol> <ul><li>将后端给的<a href=\\\"#mock-%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90%E5%AD%97%E7%AC%A6%E4%B8%B2\\\">菜单字符串</a>存于 sessionstorage,key 值为<code>Getjson</code></li> <li>addDynamic 函数将获取的菜单字符串用双层循环进行遍历匹配 id，如果 id 相同则将路由信息 push 进路由变量<code>routerString</code>和菜单栏变量<code>nav</code></li> <li>用 route 动态添加路由的 api 将处理好的<code>routerString</code> push 进去</li> <li>用 export 抛出一个 promise 对象，解决异步问题，等路由加载完毕再执行路由跳转或者其他业务逻辑</li></ul> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">//路由加载完毕，目前这个函数在login.js和main.js这两个地方使用</span>\\n<span class=\\\"token function\\\">addDynamic</span><span class=\\\"token punctuation\\\">(</span>json<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//业务代码</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>$message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">success</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;登录成功!&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>$router<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/home/index&quot;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><ol start=\\\"3\\\"><li><p>用法</p> <ul><li>在需要动态加载权限路由的地方<code>import {addDynamic} from &quot;@/library/router/dyroute.js&quot;;</code></li> <li>在 sessionStorage 或者请求获取菜单字符串 json,<code>addDynamic(json).then(()=&gt;{//业务代码})</code></li></ul> <p><em>后期改成 addDynamic 递归写法，包括左侧菜单栏，上次测试过 element 的菜单栏用递归写法，收缩时有 bug，在 GitHub 提了 issue，看他们是否解决了</em></p></li></ol> <h4 id=\\\"_2-src-文件夹的-library-router-index-js\\\"><a href=\\\"#_2-src-文件夹的-library-router-index-js\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 2.src 文件夹的 library/router/index.js</h4> <h5 id=\\\"作用\\\"><a href=\\\"#作用\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 作用</h5> <ol><li>注册基础路由</li> <li>添加路由守卫</li></ol> <ul><li>判断是否未登陆页，是则清除缓存，否则进入下一判断</li> <li>判断是否登陆<code>isLogin</code> 未登陆，重定位到登录页，并清除缓存</li> <li>已登陆：判断是否为未注册路由，是则重定位到 404 页面，否则</li> <li>判断是否为首页，是则直接进入页面，否则</li> <li>处理 Tag 和面包屑，判断是否已经存在当前路由的<code>Tag</code>，已经存在则修改面包屑并进入页面</li> <li>否则添加<code>Tag</code>,修改面包屑并进入页面\\n<em>在合并路由过程中，meta 元信息已经将二级路由的上级路由信息存入字段 father 中，为了解决面包屑问题</em></li></ul>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}