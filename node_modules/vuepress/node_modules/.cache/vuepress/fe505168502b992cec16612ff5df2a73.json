{"remainingRequest":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!H:\\full\\myBolg\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!H:\\full\\myBolg\\docs\\api\\README.md?vue&type=template&id=059ef528&","dependencies":[{"path":"H:\\full\\myBolg\\docs\\api\\README.md","mtime":1551323537299},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1545827200284},{"path":"H:\\full\\myBolg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545827198486},{"path":"H:\\full\\myBolg\\node_modules\\vue-loader\\lib\\index.js","mtime":1545827200284},{"path":"H:\\full\\myBolg\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1551338590531}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"接口设计规范\\\"><a href=\\\"#接口设计规范\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 接口设计规范</h1> <h2 id=\\\"json-web-token\\\"><a href=\\\"#json-web-token\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> JSON Web Token</h2> <ul><li>通过 JWT（JSON Web Token）进行身份验证 JWT 是个很长的字符串，中间用 <code>.</code>分割成三个部分为： Header.Payload.Signature。加密前信息如下（<em>后端完成</em>）：</li> <li>如果使用 JWT(JSON Web Token)进行鉴权操作，需要定义好前后端加密方式，拟采用 RSA 非对称加密。</li></ul> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code> header<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> token类型<span class=\\\"token punctuation\\\">,</span>\\n  algorithm<span class=\\\"token punctuation\\\">:</span> 加密的算法，对称加密\\n <span class=\\\"token punctuation\\\">}</span>\\n payload<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n  token唯一标识、用户的基本信息等，key<span class=\\\"token punctuation\\\">:</span>value 形式\\n <span class=\\\"token punctuation\\\">}</span>\\n signature<span class=\\\"token punctuation\\\">:</span> 通过header与payload，使用一个密钥，根据一定算法生成签名信息。\\n</code></pre></div><p>加密后</p> <div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code> sfajalgosodfIJBFo23r34JOGJI23dfsg.jioIEojgOIDKs456fLFFfsdfdFFOdfs5d47164fsdf1654IDFJODF.FAfs254dfdsfDJdf253FOdfsAS34531DIGJIOMVODHGAOFJ\\n</code></pre></div><div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">后端</p> <p>携带 token 的请求，后端首先验证 token 的有效性（准确性、是否已过期），验证 token 有效后再进行请求处理。若 token 已过期或需刷新，则生成新的 token，与相应数据一起返回前端。</p></div> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">前端</p> <p>前端获取到 token，将其保存至本地（localStorage 或 sessionStorage），每次请求将 token 注入 Header 的 Authorizationziduan 中</p></div> <h2 id=\\\"session\\\"><a href=\\\"#session\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> session</h2> <ul><li>前端要将 withCredentials 设为 true</li></ul> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> service <span class=\\\"token operator\\\">=</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  withCredentials<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><ul><li>后端:Access-Control-Allow-Credentials 设为 true 的话，Access-Control-Allow-Origin 就不能设为*了，只好改成具体的域了，这样就可以多次请求取到的 sessionid 就一致了。</li></ul> <div class=\\\"language-java extra-class\\\"><pre class=\\\"language-java\\\"><code>        httpResponse<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHeader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;Access-Control-Allow-Credentials&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;true&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n       httpResponse<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHeader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;Access-Control-Allow-Origin&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;http://192.168.199.240:8081&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n       httpResponse<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHeader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><h2 id=\\\"请求格式\\\"><a href=\\\"#请求格式\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 请求格式</h2> <table><tr><td>请求信息</td> <td>说明</td></tr> <tr><td>url</td> <td>前端向后端请求的资源路径，restful风格</td></tr> <tr><td>method</td> <td>请求的方式，如post、get、put、delete等</td></tr> <tr><td>params</td> <td>请求时附带的参数</td></tr></table> <p>其中，除部分不需认证访问的公用接口外，其他请求的 Header 中 Authorizationziduan 字段为用户的 token，该字段表示用户登陆的检验字段，证明该次请求的发起者是已登陆的用户。<br> <code>例：http[s]://[host:port]/[api]/[userlist]?[key=value]</code></p> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">示例</p> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">api_callback</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">$http</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/callback`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    method<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;get&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    params\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>resp <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>resp<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fetchReportlist</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">$http</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/officer_reportlist&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    method<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;post&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    data<span class=\\\"token punctuation\\\">:</span> params\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div></div> <h2 id=\\\"响应格式\\\"><a href=\\\"#响应格式\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 响应格式</h2> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"具体看\"),_c('router-link',{attrs:{\"to\":\"/httpcode/\"}},[_vm._v(\"响应码表\")])],2),_vm._ssrNode(\" <table><tr><td>响应字段/属性</td> <td>说明</td></tr> <tr><td>code</td> <td>业务响应状态码，表示业务处理的正常或异常状态，http状态码900  </td></tr> <tr><td>data</td> <td>实际响应的业务数据</td></tr> <tr><td>msg</td> <td>服务端处理当次请求的结果提示文字</td></tr></table> <ul><li>返回标准的 json 字符串。<br>\\n如未带 token 请求或 token 认证失败，返回错误响应：<br> <code>{”code”:”0”,”msg”:”token认证失败/不存在该token/用户未登录”,data: ’null/_’}</code></li></ul> <h1 id=\\\"通用请求类型\\\"><a href=\\\"#通用请求类型\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 通用请求类型</h1> <h2 id=\\\"表格数据结构（列表数据结构）\\\"><a href=\\\"#表格数据结构（列表数据结构）\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 表格数据结构（列表数据结构）</h2> <h4 id=\\\"_1-列表类型的请求\\\"><a href=\\\"#_1-列表类型的请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 1.列表类型的请求</h4> <table><tr><td>名称</td> <td colspan=\\\"3\\\">列表信箱</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">资源定位路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">get</td></tr> <tr><td rowspan=\\\"4\\\">params</td> <td>limit</td> <td colspan=\\\"2\\\">分页大小</td></tr> <tr><td>page</td> <td colspan=\\\"2\\\">当前页码</td></tr> <tr><td>keyword</td> <td colspan=\\\"2\\\">关键字搜索，由业务需求确定后端查询规则</td></tr> <tr><td>其他搜索字段名</td> <td colspan=\\\"2\\\">查询的条件值，key=value形式</td></tr> <tr><td rowspan=\\\"8\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"6\\\">data</td> <td colspan=\\\"2\\\">\\n              请求成功时返回的数据，包含内容如下\\n            </td></tr> <tr><td>total</td> <td>总记录数</td></tr> <tr><td>list</td> <td>数组类型，实际查询结果，必须带id值</td></tr></table> <h4 id=\\\"发送请求\\\"><a href=\\\"#发送请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 发送请求</h4> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code>params <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  limit<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">45</span><span class=\\\"token punctuation\\\">,</span>\\n  page<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n  keyword<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;dddd&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">api_callback</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">$http</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/callback`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    method<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;get&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    params\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h4 id=\\\"响应信息\\\"><a href=\\\"#响应信息\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 响应信息</h4> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">//这个已经封装</span>\\n  res<span class=\\\"token punctuation\\\">{</span>\\n      code<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'200'</span><span class=\\\"token punctuation\\\">,</span>\\n      msg<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">&quot;成功&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n      data<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n     list<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'admin'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'123456'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//表格数据</span>\\n     pages<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">124</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">//总页数</span>\\n     total<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">1234</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//总记录数</span>\\n     colums<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//列名</span>\\n     options<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token comment\\\">//列操作按钮集合</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre></div><h2 id=\\\"实体信息的请求\\\"><a href=\\\"#实体信息的请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 实体信息的请求</h2> <table><tr><td>名称</td> <td colspan=\\\"3\\\">实体信息</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">资源定位路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">get</td></tr> <tr><td>params</td> <td>id</td> <td colspan=\\\"2\\\">实体id值对应的记录</td></tr> <tr><td rowspan=\\\"4\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"2\\\">data</td> <td colspan=\\\"2\\\">\\n              请求成功时返回的数据，包含内容如下\\n            </td></tr> <tr><td>实体属性名</td> <td>属性名对应的数据值，具体属性根据需求确定，必须包含id值</td></tr></table> <h2 id=\\\"新增、修改实体请求\\\"><a href=\\\"#新增、修改实体请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 新增、修改实体请求</h2> <table><tr><td>名称</td> <td colspan=\\\"3\\\">新增/修改**实体</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">新增post，修改post</td></tr> <tr><td rowspan=\\\"2\\\">params</td> <td>id</td> <td colspan=\\\"2\\\">实体id值对应的记录</td></tr> <tr><td>实体字段名</td> <td>字段值，依业务需求确定字段</td></tr> <tr><td rowspan=\\\"3\\\">响应信息</td> <td>code</td> <td>业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"2\\\">data</td> <td colspan=\\\"2\\\">\\n              根据需求返回响应数据\\n            </td></tr></table> <h2 id=\\\"删除-信息请求\\\"><a href=\\\"#删除-信息请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 删除**信息请求</h2> <table><tr><td>名称</td> <td colspan=\\\"3\\\">删除**信息</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">delete</td></tr> <tr><td>params</td> <td>id</td> <td colspan=\\\"2\\\">实体id值对应的记录，若批量删除，id为数组，其他批量操作类似</td></tr> <tr><td rowspan=\\\"3\\\">响应信息</td> <td>code</td> <td>业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"2\\\">data</td> <td colspan=\\\"2\\\">\\n              根据需求返回响应数据\\n            </td></tr></table> <h2 id=\\\"图表类型数据请求\\\"><a href=\\\"#图表类型数据请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 图表类型数据请求</h2> <table><tr><td>名称</td> <td colspan=\\\"3\\\">**图表数据</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">get</td></tr> <tr><td>params</td> <td>id</td> <td colspan=\\\"2\\\">图标数据唯一标识</td></tr> <tr><td rowspan=\\\"4\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"2\\\">data</td> <td colspan=\\\"2\\\">\\n             请求成功时返回的数据，包含内容如下\\n            </td></tr> <tr><td>[data]</td> <td>\\n              根据echart插件格式返回具体数据\\n            </td></tr></table> <h2 id=\\\"数据字典信息获取\\\"><a href=\\\"#数据字典信息获取\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 数据字典信息获取</h2> <ul><li>（返回常规的列表数据）</li></ul> <table><tr><td>名称</td> <td colspan=\\\"3\\\">数据字典信息</td></tr> <tr><td>描述</td> <td colspan=\\\"3\\\">作用于下拉框、单选框、复选框等前端UI组件中，统一管理数据源（数据库、JSON、文件等）</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">get</td></tr> <tr><td>params</td> <td>kind/type</td> <td colspan=\\\"2\\\">唯一确定字典组标识，必选参数，参数名待定</td></tr> <tr><td rowspan=\\\"8\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"6\\\">data</td> <td colspan=\\\"2\\\">\\n                请求成功时返回的数据，包含内容如下\\n            </td></tr> <tr><td>kind/type</td> <td>\\n                字典类型标识\\n            </td></tr> <tr rowspan=\\\"4\\\"><td>items</td> <td>具体细项，必须包含字段（原来的规范文档写的）</td></tr> <tr><td>value</td> <td>\\n                字典实际值\\n            </td></tr> <tr><td>text</td> <td>\\n                向用户显示的内容\\n            </td></tr> <tr><td>disable</td> <td>\\n                若禁用了该选项，则此属性值为true，否则可忽略\\n            </td></tr></table> <h2 id=\\\"发送短信验证码\\\"><a href=\\\"#发送短信验证码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 发送短信验证码</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>send_msg</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td>params</td> <td>mobile（手机号码）</td></tr></table> <h2 id=\\\"验证短信验证码\\\"><a href=\\\"#验证短信验证码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 验证短信验证码</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>check_msg</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td rowspan=\\\"2\\\">params</td> <td>mobile（手机号码）</td></tr> <tr><td>msg_code（短信验证码）</td></tr></table> <h2 id=\\\"获取图片验证码\\\"><a href=\\\"#获取图片验证码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 获取图片验证码</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>get_aptcha</td></tr> <tr><td>method</td> <td>get</td></tr> <tr><td>params</td> <td>id（验证码辅助id）</td></tr></table> <h2 id=\\\"验证图片验证码\\\"><a href=\\\"#验证图片验证码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 验证图片验证码</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>check_aptcha</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td rowspan=\\\"2\\\">params</td> <td>id（验证码辅助id）</td></tr> <tr><td>verify(图片验证码)</td></tr></table> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">TIP</p> <p>文件上传—秒传处理、检测分片是否已上传、上传分片、合并分片（一次性合并）</p></div> <h2 id=\\\"秒传处理\\\"><a href=\\\"#秒传处理\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 秒传处理</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>checkFile</td></tr> <tr><td>method</td> <td>Post</td></tr> <tr><td>params</td> <td>md5（文件md5）</td></tr></table> <h2 id=\\\"检测分片是否已上传\\\"><a href=\\\"#检测分片是否已上传\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 检测分片是否已上传</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>checkChunk</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td rowspan=\\\"4\\\">params</td> <td>md5（文件md5）</td></tr> <tr><td>ext(文件后缀)</td></tr> <tr><td>chunk(当前分片)</td></tr> <tr><td>chunkSize（分片大小）</td></tr></table> <h2 id=\\\"上传分片\\\"><a href=\\\"#上传分片\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 上传分片</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>upOne</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td rowspan=\\\"5\\\">params</td> <td>md5（文件md5）</td></tr> <tr><td>ext(文件后缀)</td></tr> <tr><td>chunk(当前分片)</td></tr> <tr><td>chunks（总分片数量）</td></tr> <tr><td>file(文件对象)</td></tr></table> <h2 id=\\\"合并分片\\\"><a href=\\\"#合并分片\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 合并分片</h2> <table><tr><td>名称</td> <td>实体信息</td></tr> <tr><td>url</td> <td>mergeChunks</td></tr> <tr><td>method</td> <td>post</td></tr> <tr><td rowspan=\\\"5\\\">params</td> <td>md5（文件md5）</td></tr> <tr><td>ext(文件后缀)</td></tr> <tr><td>chunk(当前分片)</td></tr> <tr><td>chunks（总分片数量）</td></tr> <tr><td>name(文件名)</td></tr></table> <h2 id=\\\"登陆注册操作相关请求\\\"><a href=\\\"#登陆注册操作相关请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 登陆注册操作相关请求</h2> <h4 id=\\\"用户登陆-后期将引入德诚用户中心\\\"><a href=\\\"#用户登陆-后期将引入德诚用户中心\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 用户登陆 --后期将引入德诚用户中心</h4> <table><tr><td>名称</td> <td colspan=\\\"3\\\">**系统用户登陆</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">post</td></tr> <tr><td rowspan=\\\"3\\\">params</td> <td>username</td> <td colspan=\\\"2\\\">用户账户</td></tr> <tr><td>password</td> <td colspan=\\\"2\\\">密码</td></tr> <tr><td>verify</td> <td colspan=\\\"2\\\">验证码</td></tr> <tr><td rowspan=\\\"5\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"3\\\">data</td> <td colspan=\\\"2\\\">\\n             登陆成功或失败信息\\n            </td></tr> <tr><td>token</td> <td>\\n              用户登陆凭证，其他需登陆才能访问的j接口携带此数据请求\\n            </td></tr> <tr><td>user_info</td> <td>用户基本信息如id，昵称/姓名，角色标识符</td></tr></table> <div class=\\\"warning custom-block\\\"><p class=\\\"custom-block-title\\\">注意</p> <p>后端需设置 token 过期时间，如 2 小时后 token 无效需重新登陆</p></div> <h4 id=\\\"验证用户名是否存在\\\"><a href=\\\"#验证用户名是否存在\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 验证用户名是否存在</h4> <table><tr><td>名称</td> <td colspan=\\\"3\\\">**系统用户名验证</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">post</td></tr> <tr><td>params</td> <td>username</td> <td colspan=\\\"2\\\">用户账户</td></tr> <tr><td rowspan=\\\"2\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr></table> <h4 id=\\\"用户注册请求\\\"><a href=\\\"#用户注册请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 用户注册请求</h4> <ul><li>用户名统一用 username</li></ul> <table><tr><td>名称</td> <td colspan=\\\"3\\\">**系统用户名注册</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">post</td></tr> <tr><td>params</td> <td>username</td> <td colspan=\\\"2\\\">用户账户</td></tr> <tr><td rowspan=\\\"4\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"2\\\">data</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td>msg</td> <td>注册结果提示信息</td></tr></table> <h4 id=\\\"登陆成功后获取导航信息\\\"><a href=\\\"#登陆成功后获取导航信息\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 登陆成功后获取导航信息</h4> <table><tr><td>名称</td> <td colspan=\\\"3\\\">**系统**角色导航菜单</td></tr> <tr><td>url</td> <td colspan=\\\"3\\\">请求处理路径</td></tr> <tr><td>method</td> <td colspan=\\\"3\\\">get</td></tr> <tr><td>params</td> <td>role</td> <td colspan=\\\"2\\\">用户角色标识符</td></tr> <tr><td rowspan=\\\"7\\\">响应信息</td> <td>code</td> <td colspan=\\\"2\\\">业务处理状态</td></tr> <tr><td>msg</td> <td colspan=\\\"2\\\">业务处理结果</td></tr> <tr><td rowspan=\\\"5\\\">data</td> <td colspan=\\\"2\\\">导航集合，每项基本信息包括</td></tr> <tr><td>name</td> <td>菜单唯一标识</td></tr> <tr><td>text</td> <td>菜单名称</td></tr> <tr><td>icon</td> <td>菜单图标</td></tr> <tr><td>children</td> <td>子菜单，结构一致</td></tr></table> <div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">//返回导航</span>\\ndata<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  nav<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;.....&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n      text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;....&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n      icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;.....&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n      children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n          name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n          text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n          icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n          children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}